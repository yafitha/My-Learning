{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AppComponent {\n  constructor() {\n    this.length = 0;\n    this.password = '';\n    this.isuseNumbers = false;\n    this.isuseLetters = false;\n    this.isuseSymbols = false;\n  }\n  OnChangeUseNumbers() {\n    this.isuseNumbers = !this.isuseNumbers;\n  }\n  OnChangeUseLetters() {\n    this.isuseLetters = !this.isuseLetters;\n  }\n  OnChangeUseSymbols() {\n    this.isuseSymbols = !this.isuseSymbols;\n  }\n  OnButtonClick() {\n    this.password = \"'fgfg\";\n  }\n  onChangeLenght(event) {\n    const inputValue = event.target.value;\n    var res = parseInt(inputValue);\n    if (!isNaN(res)) {\n      this.length = res;\n    }\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 24,\n  vars: 1,\n  consts: [[3, \"input\"], [\"type\", \"checkbox\", 3, \"change\"], [3, \"click\"], [3, \"value\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Password Generator\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\")(3, \"label\");\n      i0.ɵɵtext(4, \"Enter Length\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 0);\n      i0.ɵɵlistener(\"input\", function AppComponent_Template_input_input_5_listener($event) {\n        return ctx.onChangeLenght($event.target.value);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\")(7, \"label\");\n      i0.ɵɵtext(8, \" Use Letters\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 1);\n      i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_9_listener() {\n        return ctx.OnChangeUseLetters();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\")(11, \"label\");\n      i0.ɵɵtext(12, \" Use numbers\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 1);\n      i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_13_listener() {\n        return ctx.OnChangeUseNumbers();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\")(15, \"label\");\n      i0.ɵɵtext(16, \" use Symbols\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 1);\n      i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_17_listener() {\n        return ctx.OnChangeUseSymbols();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_18_listener() {\n        return ctx.OnButtonClick();\n      });\n      i0.ɵɵtext(19, \"Generate!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\")(21, \"label\");\n      i0.ɵɵtext(22, \" your password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(23);\n      i0.ɵɵproperty(\"value\", ctx.password);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,YAAY;EALzBC;IAME,WAAM,GAAG,CAAC;IACV,aAAQ,GAAG,EAAE;IACb,iBAAY,GAAG,KAAK;IACpB,iBAAY,GAAG,KAAK;IACpB,iBAAY,GAAG,KAAK;;EAEpBC,kBAAkB;IAChB,IAAI,CAACC,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACxC;EACAC,kBAAkB;IAChB,IAAI,CAACC,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACxC;EACAC,kBAAkB;IAChB,IAAI,CAACC,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACxC;EACAC,aAAa;IACX,IAAI,CAACC,QAAQ,GAAG,OAAO;EACzB;EAEAC,cAAc,CAACC,KAAU;IACvB,MAAMC,UAAU,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACrC,IAAIC,GAAG,GAAGC,QAAQ,CAACJ,UAAU,CAAC;IAC9B,IAAI,CAACK,KAAK,CAACF,GAAG,CAAC,EAAE;MACf,IAAI,CAACG,MAAM,GAAGH,GAAG;;EAErB;;AA1BWf,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCPzBC,0BAAI;MAAAA,kCAAkB;MAAAA,iBAAK;MAE3BA,2BAAK;MACIA,4BAAY;MAAAA,iBAAQ;MAC3BA,gCAAsD;MAA/CA;QAAA,OAASC,uCAAmC;MAAA,EAAC;MAApDD,iBAAsD;MAGxDA,2BAAK;MACKA,4BAAW;MAAAA,iBAAQ;MAC3BA,gCAAwD;MAAjDA;QAAA,OAAUC,wBAAoB;MAAA,EAAC;MAAtCD,iBAAwD;MAE1DA,4BAAK;MACKA,6BAAW;MAAAA,iBAAQ;MAC3BA,iCAAyD;MAAjDA;QAAA,OAAUC,wBAAoB;MAAA,EAAC;MAAvCD,iBAAyD;MAE3DA,4BAAK;MACKA,6BAAW;MAAAA,iBAAQ;MAC3BA,iCAAwD;MAAjDA;QAAA,OAAUC,wBAAoB;MAAA,EAAC;MAAtCD,iBAAwD;MAG1DA,kCAAkC;MAA1BA;QAAA,OAASC,mBAAe;MAAA,EAAC;MAACD,0BAAS;MAAAA,iBAAS;MAGpDA,4BAAK;MACKA,+BAAa;MAAAA,iBAAQ;MAC7BA,4BAA2B;MAC7BA,iBAAM;;;MADGA,gBAAkB;MAAlBA,oCAAkB","names":["AppComponent","constructor","OnChangeUseNumbers","isuseNumbers","OnChangeUseLetters","isuseLetters","OnChangeUseSymbols","isuseSymbols","OnButtonClick","password","onChangeLenght","event","inputValue","target","value","res","parseInt","isNaN","length","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\My Learning\\pw\\src\\app\\app.component.ts","C:\\My Learning\\pw\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  length = 0;\n  password = '';\n  isuseNumbers = false;\n  isuseLetters = false;\n  isuseSymbols = false;\n\n  OnChangeUseNumbers() {\n    this.isuseNumbers = !this.isuseNumbers;\n  }\n  OnChangeUseLetters() {\n    this.isuseLetters = !this.isuseLetters;\n  }\n  OnChangeUseSymbols() {\n    this.isuseSymbols = !this.isuseSymbols;\n  }\n  OnButtonClick() {\n    this.password = \"'fgfg\";\n  }\n\n  onChangeLenght(event: any) {\n    const inputValue = event.target.value;\n    var res = parseInt(inputValue);\n    if (!isNaN(res)) {\n      this.length = res;\n    }\n  }\n}\n","<h1>Password Generator</h1>\n\n<div>\n  <label>Enter Length</label>\n  <input (input)=\"onChangeLenght($event.target.value)\"/>\n</div>\n\n<div>\n  <label> Use Letters</label>\n  <input (change)=\"OnChangeUseLetters()\" type=\"checkbox\"/>\n</div>\n<div>\n  <label> Use numbers</label>\n  <input  (change)=\"OnChangeUseNumbers()\" type=\"checkbox\"/>\n</div>\n<div>\n  <label> use Symbols</label>\n  <input (change)=\"OnChangeUseSymbols()\" type=\"checkbox\"/>\n</div>\n\n<button (click)=\"OnButtonClick()\">Generate!</button>\n\n\n<div>\n  <label> your password</label>\n  <input [value]=\"password\"/>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}